/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import meshclient.*;
/**
 *
 * @author Jose Ignacio
 */
public class PanelCliente extends javax.swing.JFrame {

    private String identificador;
    
    private static PanelCliente instanciaPanelCliente;
    private ConexionMC conexion = new ConexionMC();
    private DefaultListModel modeloListVerificadores;
    private DefaultListModel modeloListCanalesSeguros;
    //private DefaultListModel modeloListMensajes;
    
    public PanelCliente() {
        initComponents();
        this.notifId.setText("Ninguno");
        this.notifEstado.setText("Desconectado");
        this.notifIdVerificador.setText("Ninguno");
        
        modeloListVerificadores = new DefaultListModel();
        modeloListCanalesSeguros = new DefaultListModel();
        //modeloListMensajes = new DefaultListModel();
    }

    public static PanelCliente getInstanciaPanelCliente(){
        
        if(instanciaPanelCliente == null){            
            instanciaPanelCliente = new PanelCliente();
        }
        return instanciaPanelCliente;
            
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textFieldId = new javax.swing.JTextField();
        textFieldSk = new javax.swing.JTextField();
        buttonIngresarCliente = new javax.swing.JButton();
        textFieldPw = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        notifGeneral = new javax.swing.JTextField();
        notifId = new javax.swing.JTextField();
        notifEstado = new javax.swing.JTextField();
        notifIdVerificador = new javax.swing.JTextField();
        buttonIniciarAutenticacion = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaVerificadores = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Panel Mesh Client");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingrese datos personales"));

        jLabel2.setText("Identificador:");

        jLabel3.setText("Contraseña:");

        jLabel4.setText("Clave privada:");

        buttonIngresarCliente.setText("Ingresar");
        buttonIngresarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIngresarClienteActionPerformed(evt);
            }
        });

        jButton1.setText("Abrir archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldId, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                            .addComponent(textFieldPw)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(textFieldSk, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonIngresarCliente)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textFieldPw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textFieldSk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(7, 7, 7)
                .addComponent(buttonIngresarCliente))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Información actual"));

        jLabel5.setText("Se ha autenticado como:");

        jLabel6.setText("Su estado actual es:");

        jLabel7.setText("Autenticado por:");

        notifGeneral.setEditable(false);
        notifGeneral.setForeground(new java.awt.Color(255, 0, 0));
        notifGeneral.setAutoscrolls(false);
        notifGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notifGeneralActionPerformed(evt);
            }
        });

        notifId.setEditable(false);

        notifEstado.setEditable(false);

        notifIdVerificador.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notifGeneral)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notifIdVerificador)
                            .addComponent(notifId)
                            .addComponent(notifEstado))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(notifId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(notifEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(notifIdVerificador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notifGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        buttonIniciarAutenticacion.setText("IniciarAutenticación");
        buttonIniciarAutenticacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIniciarAutenticacionActionPerformed(evt);
            }
        });

        jButton3.setText("Cancelar");

        listaVerificadores.setBorder(javax.swing.BorderFactory.createTitledBorder("Solicitar autenticación a ..."));
        listaVerificadores.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(listaVerificadores);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3)
                            .addGap(18, 18, 18)
                            .addComponent(buttonIniciarAutenticacion, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonIniciarAutenticacion)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonIniciarAutenticacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIniciarAutenticacionActionPerformed
                
        String verificadorElegido = listaVerificadores.getSelectedValue();
        try{
            conexion.getMeshCliente().iniciarProtocolo(verificadorElegido);
        }catch(RemoteException ex) {
            Logger.getLogger(PanelCliente.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_buttonIniciarAutenticacionActionPerformed

    private void buttonIngresarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIngresarClienteActionPerformed

        int ingresado = -1;
        
        identificador = this.textFieldId.getText();
        String password = this.textFieldPw.getText();
        String llavePrivada = this.textFieldSk.getText();
        
        if(!(identificador.isEmpty()||password.isEmpty()||llavePrivada.isEmpty())){//Validar nombre y contraseña ingresada
                                
            try{
                if(conexion.comunicarWMNRMI()){
                    ingresado = conexion.solicitarRegistroMC_WMN(identificador, password, llavePrivada);
                }
            } catch (RemoteException ex) {
                    Logger.getLogger(PanelCliente.class.getName()).log(Level.SEVERE, null, ex);                
            }
        }
        
        switch (ingresado) {
            case 0:
                this.notifId.setText(identificador);
                this.notifEstado.setText("Sin autenticar");
                this.notifGeneral.setText("Bienvenido a la prueba del protocolo de autenticación");
                break;
            case 1:
                this.notifGeneral.setText("Cliente autenticado en el primer router sin clientes");                
                break;
            default:
                this.notifGeneral.setText("Error");
                break;
        }
        this.buttonIngresarCliente.setEnabled(false);
    }//GEN-LAST:event_buttonIngresarClienteActionPerformed

    private void notifGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notifGeneralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_notifGeneralActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    public void actualizarEstado(boolean avisarWMN, String nombreAutenticador) throws RemoteException{
        
        this.notifId.setText(identificador);
        this.notifEstado.setText("Autenticado");
        this.notifIdVerificador.setText(nombreAutenticador);
                
        this.buttonIniciarAutenticacion.setEnabled(false);
                
        if(avisarWMN){
            conexion.avisarAutenticación(identificador, nombreAutenticador);        
            this.notifGeneral.setText("Autenticación finalizada correctamente");
        }                    
    }
    
    public void cambiarVIsta(){
        
        this.listaVerificadores.setBorder(BorderFactory.createTitledBorder("Llaves de sesion con ..."));        
        this.listaVerificadores.setModel(new DefaultListModel<>());        
    }
    public void agregarCanal(String solicitante, String verificador){
        
        String canal = solicitante + " <---> " + verificador;
        modeloListCanalesSeguros.addElement(canal);
        this.listaVerificadores.setModel(modeloListCanalesSeguros);
    }
    
    public void agregarRoutersListaVerificadores(int cantidadMRs){
        String nombreRouters;
                        
        for(int i=1; i <= cantidadMRs;i++){
            nombreRouters = "Router"+i+" MR";
            modeloListVerificadores.addElement(nombreRouters);            
        }
        this.listaVerificadores.setModel(modeloListVerificadores);        
    }
    
    public void agregarMCsListaVerificadores(String identificador){
        String nombreCliente = identificador+" MC";
        modeloListVerificadores.addElement(nombreCliente);
        this.listaVerificadores.setModel(modeloListVerificadores);    
    }
    
    /*public void agregarListMensajes(String mensaje){
        modeloListMensajes.addElement(mensaje);
        this.listMensajes.setModel(modeloListMensajes);
    }*/
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonIngresarCliente;
    private javax.swing.JButton buttonIniciarAutenticacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listaVerificadores;
    private javax.swing.JTextField notifEstado;
    private javax.swing.JTextField notifGeneral;
    private javax.swing.JTextField notifId;
    private javax.swing.JTextField notifIdVerificador;
    private javax.swing.JTextField textFieldId;
    private javax.swing.JPasswordField textFieldPw;
    private javax.swing.JTextField textFieldSk;
    // End of variables declaration//GEN-END:variables
}
